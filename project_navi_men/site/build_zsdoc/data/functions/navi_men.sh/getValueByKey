if [[ $# -lt 4 ]]; then
  echo  -e "${ERROR} (${0##*/} - ${FUNCNAME[*]}): '${FUNCNAME[0]}' requires four arguments but got '$#'!" 1>&2
  exit 1
fi
local -r config_json="$1"
local -r json_key="$2"
declare -nr nrai_get_value_by_key_valid_values="$3"
declare -n nrstr_get_value_by_key_return="$4"
if [[ "$( jq 'has('\""${json_key}"\"')' < "${config_json}" )" == true ]]; then
  default_value="$( jq -r '.'\""${json_key}"\"'' < "${config_json}")"
  if [[ -z "${default_value}" ]]; then
    nrstr_get_value_by_key_return="${nrai_get_value_by_key_valid_values[0]}"
  else
    found_match=false
    for val in "${nrai_get_value_by_key_valid_values[@]}"; do
      if [[ "${val}" == "${default_value}" ]]; then
        found_match=true
        nrstr_get_value_by_key_return="${default_value}"
        break;
      fi
    done
    if [[ "${found_match}" == false ]]; then
      echo -e "${ERROR} (${0##*/} - ${FUNCNAME[*]}): default value '${default_value}' is not in list of valid values '${nrai_get_value_by_key_valid_values[*]}'." 1>&2
      exit 1
    fi
  fi
else
  nrstr_get_value_by_key_return="${nrai_get_value_by_key_valid_values[0]}"
fi
