if [[ "$#" -ne "3" ]]; then
  echo -e "${ERROR} (${0##*/} - ${FUNCNAME[*]}): '${FUNCNAME[0]}' requires three arguments but got '$#'!" 1>&2
  exit "${ERR_WRONG_NUM_OF_INPUTS}"
fi

local -r config_json="$1"
local -r node_name="$2"
declare -n nraamd_read_object_metadata_from_json_return="$3"

local -r prefixed_metadata_key="${node_name}.${JKEY_SHARED_OBJECT_METADATA}"

local has_node_return=-1
hasNode "${config_json}" "${prefixed_metadata_key}" has_node_return

if [[ "${has_node_return}" -eq "1" ]]; then
  local -a metadata_keys=()
  getKeysByNode "${config_json}" "${prefixed_metadata_key}" metadata_keys

  local node_as_string=""
  for metadata_key in "${metadata_keys[@]}"; do
    if [[ "${metadata_key}" == "${JKEY_SHARED_OBJECT_METADATA}" ]]; then
      echo -e "${ERROR} (${0##*/} - ${FUNCNAME[*]}): Nested metadata is not supported: '${prefixed_metadata_key}'!" 1>&2
      exit "${ERR_NM_OBJECT_NESTED_METADATA}"
    fi
    getNodeAsString "${config_json}" "${prefixed_metadata_key}.${metadata_key}" node_as_string

    local mdaa_key="${node_name}.${metadata_key}"
    mdaa_key="${JKEY_SHARED_OBJECT_METADATA}${MULTI_DIM_ARRAY_DELIMITER}${mdaa_key//\./"${MULTI_DIM_ARRAY_DELIMITER}"}"
    nraamd_read_object_metadata_from_json_return["${mdaa_key}"]="${node_as_string}"
  done
else
  echo -e "${ERROR} (${0##*/} - ${FUNCNAME[*]}): '${config_json}' does not contain a node with name '${node_name}'!" 1>&2
  exit "${ERR_JSON_NODE_NOT_FOUND}"
fi
